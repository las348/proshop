{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","OrderListScreen","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.73cb8950.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n}\r\n    from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n}\r\n    from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders:[] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders:[] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n                orders: []\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n \r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n            type='text'\r\n            name='q'\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder='Search Products...'\r\n            className='mr-sm-2 ml-sm-5'\r\n            >\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login',\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS, payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        \r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : <LinkContainer to='/login'>\r\n                                <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n                            </LinkContainer>}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; ProShop\r\n                       </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={value >= 1 \r\n                    ? 'fas fa-star' \r\n                    : value >= 0.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2 \r\n                    ? 'fas fa-star' \r\n                    : value >= 1.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3\r\n                    ? 'fas fa-star' \r\n                    : value >= 2.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4\r\n                    ? 'fas fa-star' \r\n                    : value >= 3.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5\r\n                    ? 'fas fa-star' \r\n                    : value >= 4.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                        color='gold'\r\n                    />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${x + 1}`\r\n                                    : `/page/${x + 1}`\r\n                                : `/admin/productlist/${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(\r\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n            )\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading\r\n        ? <Loader /> : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image\r\n                                    src={product.image}\r\n                                    alt={product.name}\r\n                                    fluid />\r\n                                <Carousel.Caption className='carousel-caption'>\r\n                                    <h2>\r\n                                        {product.name} (${product.price})\r\n                                </h2>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Proshop',\r\n    description: 'We sell the best products at a great price',\r\n    keywords: 'electronics, tech accessories'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>\r\n                Go Back\r\n                </Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        {products.map((product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate\r\n                        pages={pages}\r\n                        page={page}\r\n                        keyword={keyword ? keyword : ''}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                <Meta title={product.name}/>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating\r\n                                        value={product.rating}\r\n                                        text={`${product.numReviews} reviews`}\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Price:\r\n                               </Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Status:\r\n                               </Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control as='select' value={qty} onChange={(e) =>\r\n                                                        setQty(e.target.value)}>\r\n                                                        {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className='btn-block'\r\n                                            type='button'\r\n                                            disabled={product.countInStock === 0}\r\n                                        >\r\n                                            Add To Cart\r\n                           </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {successProductReview && (\r\n                                        <Message variant='success'>\r\n                                            Review submitted successfully\r\n                                        </Message>\r\n                                    )}\r\n                                    {errorProductReview && (\r\n                                        <Message variant='danger'>\r\n                                            {errorProductReview}\r\n                                        </Message>)}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={rating}\r\n                                                    onChange={(e) => setRating(e.target.value)}\r\n                                                    >\r\n                                                    <option value=''>Select...</option>\r\n                                                    <option value='1'>1 - Poor</option>\r\n                                                    <option value='2'>2 - Fair</option>\r\n                                                    <option value='3'>3 - Good</option>\r\n                                                    <option value='4'>4 - Very Good</option>\r\n                                                    <option value='5'>5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='textarea'\r\n                                                    row='3'\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}\r\n                                                >\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button type='submit' variant='primary'>\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>Please <Link to='/login'>sign in{' '}</Link>to write a review\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n       dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>${item.price}</Col>\r\n                                <Col md={2}>\r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={item.qty}\r\n                                        onChange={(e) =>\r\n                                            dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            )}\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? {' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirm password'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account? {' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [history, userInfo, dispatch, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirm password'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>\r\n                    {errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                     <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                        </Form.Check>\r\n\r\n                        {/* <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                        </Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    //Calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce(\r\n        (acc, item) => acc + item.price * item.qty, 0))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address},\r\n                                {cart.shippingAddress.city}{' '},\r\n                                {cart.shippingAddress.postalCode}{' '},\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    if (!loading) {\r\n        //Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce(\r\n            (acc, item) => acc + item.price * item.qty, 0))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n        : <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>{' '}\r\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address},\r\n                                {' '}{order.shippingAddress.city},\r\n                                {' '}{order.shippingAddress.postalCode},\r\n                                {' '}{order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                : <Message variant='danger'>Not paid</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn btn-block'\r\n                                        onClick={deliverHandler}>\r\n                                        Mark as Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector((state) => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Orders</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL PRICE</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                               Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector((state) => state.userDelete)\r\n    const { success:successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n      if (window.confirm('Are you sure?')) {\r\n        dispatch(deleteUser(id))\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                     <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userList' className='btn btn-light my-3'>\r\n                Go Back\r\n        </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n            </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Pagination } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector((state) => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector((state) => state.productCreate)\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct\r\n    } = productCreate\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [\r\n        dispatch, \r\n        history, \r\n        userInfo, \r\n        successCreate, \r\n        createdProduct,\r\n        pageNumber\r\n    ])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products  </h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map((product) => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button\r\n                                            variant='danger'\r\n                                            className='btn-sm'\r\n                                            onClick={() => deleteHandler(product._id)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate\r\n                        pages={pages}\r\n                        page={page}\r\n                        isAdmin={true}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n// import {  } from '../constants/productConstants'\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n        </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter price'\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            >\r\n                            </Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter brand'\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter Count In Stock'\r\n                                value={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter category'\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProductEditScreen\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact/>\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact/>\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}